#include "msp.h"
#include <stdio.h>
#include <string.h>
#include "ST7735.h"

/* Pins to ST7735 LCD
CLK		P9.5
SDA		P9.7
RS		P9.2
RST		P9.3
CS		P9.4
*/

void Clock_Init48MHz(void); // Initialize the clock

void main(void)
 {
	WDT_A->CTL = WDT_A_CTL_PW | WDT_A_CTL_HOLD; // stop watchdog timer

	char *word = "EMBEDDED SYSTEMS\n";

	uint32_t j;		   // main 1
	Clock_Init48MHz(); // set system clock to 48 MHz
	Output_Init();

	ST7735_SetTextColor(ST7735_WHITE);
	ST7735_SetCursor(3.6, 8);
	ST7735_OutString(word);
	while (1)
	{
	}
}

void Clock_Init48MHz(void)
{
	// Configure Flash wait-state to 1 for both banks 0 & 1
	FLCTL->BANK0_RDCTL = (FLCTL->BANK0_RDCTL & ~(FLCTL_BANK0_RDCTL_WAIT_MASK)) |
						FLCTL_BANK0_RDCTL_WAIT_1;
	FLCTL->BANK1_RDCTL = (FLCTL->BANK0_RDCTL & ~(FLCTL_BANK0_RDCTL_WAIT_MASK)) |
						FLCTL_BANK1_RDCTL_WAIT_1;

	// Configure HFXT to use 48MHz crystal, source to MCLK & HSMCLK*
	PJ->SEL0 |= BIT2 | BIT3; // Configure PJ.2/3 for HFXT function
	PJ->SEL1 &= ~(BIT2 | BIT3);
	CS->KEY = CS_KEY_VAL; // Unlock CS module for register access
	CS->CTL2 |= CS_CTL2_HFXT_EN | CS_CTL2_HFXTFREQ_6 | CS_CTL2_HFXTDRIVE;
	while (CS->IFG & CS_IFG_HFXTIFG)
		CS->CLRIFG |= CS_CLRIFG_CLR_HFXTIFG;

	/* Select MCLK & HSMCLK = HFXT, no divider */
	CS->CTL1 = CS->CTL1 & ~(CS_CTL1_SELM_MASK |
							CS_CTL1_DIVM_MASK |
							CS_CTL1_SELS_MASK |
							CS_CTL1_DIVHS_MASK) |
							CS_CTL1_SELM__HFXTCLK |
							CS_CTL1_SELS__HFXTCLK;

	CS->CTL1 = CS->CTL1 | CS_CTL1_DIVS_2; // change the SMCLK clock speed to 12 MHz.

	CS->KEY = 0; // Lock CS module from unintended accesses
}
